"use strict";angular.module("checkoutApp",["ui.router","ngAnimate"]).config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("checkout",{url:"/checkout",templateUrl:"views/checkout.html",controller:"checkoutCtrl",resolve:{fields:["$q","$http",function(a,b){var c=a.defer();return b.get("scripts/json/checkout.fields.json").success(function(a){setTimeout(function(){c.resolve(a)},0)}).error(function(){c.reject("failed to load checkout.plans.json")}),c.promise}],plans:["$q","$http",function(a,b){var c=a.defer();return b.get("scripts/json/checkout.plans.json").success(function(a){setTimeout(function(){c.resolve(a)},0)}).error(function(){c.reject("failed to load checkout.plans.json")}),c.promise}]}}).state("checkout.personal",{url:"/personal",templateUrl:"views/checkout-personal.html"}).state("checkout.service",{url:"/service",templateUrl:"views/checkout-service.html"}).state("checkout.billing",{url:"/billing",templateUrl:"views/checkout-billing.html"}).state("checkout.authorizations",{url:"/authorizations",templateUrl:"views/checkout-authorizations.html"}),b.otherwise("/checkout")}]),angular.module("checkoutApp").controller("checkoutCtrl",["fields","plans","$scope","$filter",function(a,b,c,d){c.fields=a,c.plans=b,c.formValues={},c.group=function(a){return d("filter")(c.fields.fieldGroups,{state:a})[0]},c.getRegex=function(a){return new RegExp(a,"i")}}]),angular.module("checkoutApp").directive("match",function(){return{require:"ngModel",restrict:"A",scope:{match:"="},link:function(a,b,c,d){a.$watch(function(){var b=d.$modelValue||d.$$invalidModelValue;return d.$pristine&&angular.isUndefined(b)||a.match===b},function(a){d.$setValidity("match",a)})}}});